<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classnc_1_1_data_cube" kind="class" language="C++" prot="public">
    <compoundname>nc::DataCube</compoundname>
    <includes refid="_data_cube_8hpp" local="no">DataCube.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename dtype</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnc_1_1_data_cube_1a1ea7b9bd30731c3325545fbcd2678761" prot="public" static="no">
        <type>typename std::deque&lt; <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &gt;::<ref refid="classnc_1_1_data_cube_1a1ea7b9bd30731c3325545fbcd2678761" kindref="member">const_iterator</ref></type>
        <definition>using nc::DataCube&lt; dtype &gt;::const_iterator =  typename std::deque&lt;NdArray&lt;dtype&gt; &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="49" column="9" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnc_1_1_data_cube_1a623df8fc48ba169d221b1c26249e5853" prot="public" static="no">
        <type>typename std::deque&lt; <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &gt;::<ref refid="classnc_1_1_data_cube_1a623df8fc48ba169d221b1c26249e5853" kindref="member">iterator</ref></type>
        <definition>using nc::DataCube&lt; dtype &gt;::iterator =  typename std::deque&lt;NdArray&lt;dtype&gt; &gt;::iterator</definition>
        <argsstring></argsstring>
        <name>iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="48" column="9" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnc_1_1_data_cube_1a2a2d6e331ac14ad822e3de20309e5e56" prot="private" static="no" mutable="no">
        <type>std::deque&lt; <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &gt;</type>
        <definition>std::deque&lt;NdArray&lt;dtype&gt; &gt; nc::DataCube&lt; dtype &gt;::cube_</definition>
        <argsstring></argsstring>
        <name>cube_</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="296" column="24" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="296" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1_data_cube_1ad5d16b97aa14113b978a0706a32cd633" prot="private" static="no" mutable="no">
        <type><ref refid="classnc_1_1_shape" kindref="compound">Shape</ref></type>
        <definition>Shape nc::DataCube&lt; dtype &gt;::elementShape_</definition>
        <argsstring></argsstring>
        <name>elementShape_</name>
        <initializer>{ 0, 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="297" column="41" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="297" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnc_1_1_data_cube_1a8224b613a7c87a16e06ef08d6f90926e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nc::DataCube&lt; dtype &gt;::DataCube</definition>
        <argsstring>()=default</argsstring>
        <name>DataCube</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Default Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="54" column="9"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a7ae08af82b0553d2b294286bdf06703b" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::DataCube&lt; dtype &gt;::DataCube</definition>
        <argsstring>(uint32 inSize)</argsstring>
        <name>DataCube</name>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor, preallocates to the input size</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inSize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="61" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="61" bodyend="63"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a8925f65b525c2b4fe04c711851b66828" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::at</definition>
        <argsstring>(uint32 inIndex)</argsstring>
        <name>at</name>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access method, with bounds checking</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="72" column="17" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="72" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1ab78c6fc396ea087819cdef43f316da4e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>const NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::at</definition>
        <argsstring>(uint32 inIndex) const</argsstring>
        <name>at</name>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Const access method, with bounds checking</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="84" column="23" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1abc8860c7c767170d003da447e7618bee" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::back</definition>
        <argsstring>() noexcept</argsstring>
        <name>back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a reference to the last element of the array</para>
<para><simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&amp; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="94" column="17" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="94" bodyend="97"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a430de05758db67815f957784b298b011" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_data_cube_1a623df8fc48ba169d221b1c26249e5853" kindref="member">iterator</ref></type>
        <definition>iterator nc::DataCube&lt; dtype &gt;::begin</definition>
        <argsstring>() noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an iterator to the beginning of the container</para>
<para><simplesect kind="return"><para>iterator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="104" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="104" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1adee7aa24a04d84f83f4c76ef8dcec974" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_data_cube_1a1ea7b9bd30731c3325545fbcd2678761" kindref="member">const_iterator</ref></type>
        <definition>const_iterator nc::DataCube&lt; dtype &gt;::cbegin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cbegin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a const_iterator to the beginning of the container</para>
<para><simplesect kind="return"><para>const_iterator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="114" column="24" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="114" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1aca3c0041f121ed92d47d1f2873f713e4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_data_cube_1a1ea7b9bd30731c3325545fbcd2678761" kindref="member">const_iterator</ref></type>
        <definition>const_iterator nc::DataCube&lt; dtype &gt;::cend</definition>
        <argsstring>() const noexcept</argsstring>
        <name>cend</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns a const_iterator to 1 past the end of the container</para>
<para><simplesect kind="return"><para>const_iterator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="171" column="24" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="171" bodyend="174"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1abbaa9ebba302183cae3563c9eb371ee3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::DataCube&lt; dtype &gt;::dump</definition>
        <argsstring>(const std::string &amp;inFilename) const</argsstring>
        <name>dump</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>inFilename</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Outputs the <ref refid="classnc_1_1_data_cube" kindref="compound">DataCube</ref> as a .bin file</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inFilename</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="124" column="14" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="124" bodyend="144"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a9aeac78f9aec9b69b9673c1e56778b1b" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_data_cube_1a623df8fc48ba169d221b1c26249e5853" kindref="member">iterator</ref></type>
        <definition>iterator nc::DataCube&lt; dtype &gt;::end</definition>
        <argsstring>() noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns an iterator to 1 past the end of the container</para>
<para><simplesect kind="return"><para>iterator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="161" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a398373aeb2f3c9dd8df78f9eac1ca3d9" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::front</definition>
        <argsstring>() noexcept</argsstring>
        <name>front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a reference to the first element of the array</para>
<para><simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&amp; </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="181" column="17" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="181" bodyend="184"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1ac569e0c62a9e5cbf21228b85128a53a5" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::DataCube&lt; dtype &gt;::isempty</definition>
        <argsstring>() noexcept</argsstring>
        <name>isempty</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Tests whether or not the container is empty</para>
<para><simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="151" column="14" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a403c0b0df22fc5fa0858109fa7a65f87" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>const NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::operator[]</definition>
        <argsstring>(uint32 inIndex) const noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Const access operator, no bounds checking</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="289" column="23" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="289" bodyend="292"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a1a16b98e982d79cc6a172b8e2bfad856" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
        <definition>NdArray&lt;dtype&gt;&amp; nc::DataCube&lt; dtype &gt;::operator[]</definition>
        <argsstring>(uint32 inIndex) noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Access operator, no bounds checking</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="277" column="17" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="277" bodyend="280"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a8e261e08fd074073771b98dc96726b0f" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::DataCube&lt; dtype &gt;::pop_back</definition>
        <argsstring>() noexcept</argsstring>
        <name>pop_back</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the last element in the container </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="209" column="14" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="209" bodyend="212"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a6dc8dc7e3b15240d42baeac1fa9bdab4" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::DataCube&lt; dtype &gt;::pop_front</definition>
        <argsstring>() noexcept</argsstring>
        <name>pop_front</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Removes the first element in the container </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="217" column="14" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a00f652afe3e8734f7d0707b12afd6a65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::DataCube&lt; dtype &gt;::push_back</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inArray)</argsstring>
        <name>push_back</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new element at the end of the container</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="227" column="14" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="227" bodyend="244"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a320959d355bddd6993d851cf67a0f88d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::DataCube&lt; dtype &gt;::push_front</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inArray)</argsstring>
        <name>push_front</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArray</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Adds a new element at the beginning of the container</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="251" column="14" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="251" bodyend="268"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a1e7e4ce08e0c57abb661a8f95192173e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classnc_1_1_shape" kindref="compound">Shape</ref> &amp;</type>
        <definition>const Shape&amp; nc::DataCube&lt; dtype &gt;::shape</definition>
        <argsstring>() const noexcept</argsstring>
        <name>shape</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number shape of the element arrays</para>
<para><simplesect kind="return"><para><ref refid="classnc_1_1_shape" kindref="compound">Shape</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="191" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_data_cube_1a36da58aa8d2ba848746e744e82b87942" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::DataCube&lt; dtype &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the size of the container array</para>
<para><simplesect kind="return"><para>size </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="201" column="16" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="201" bodyend="204"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Convenience container for holding a uniform array of NdArrays. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nc::DataCube&lt; dtype &gt;</label>
        <link refid="classnc_1_1_data_cube"/>
      </node>
    </collaborationgraph>
    <location file="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" line="45" column="1" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/DataCube.hpp" bodystart="44" bodyend="298"/>
    <listofallmembers>
      <member refid="classnc_1_1_data_cube_1a8925f65b525c2b4fe04c711851b66828" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>at</name></member>
      <member refid="classnc_1_1_data_cube_1ab78c6fc396ea087819cdef43f316da4e" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>at</name></member>
      <member refid="classnc_1_1_data_cube_1abc8860c7c767170d003da447e7618bee" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>back</name></member>
      <member refid="classnc_1_1_data_cube_1a430de05758db67815f957784b298b011" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>begin</name></member>
      <member refid="classnc_1_1_data_cube_1adee7aa24a04d84f83f4c76ef8dcec974" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>cbegin</name></member>
      <member refid="classnc_1_1_data_cube_1aca3c0041f121ed92d47d1f2873f713e4" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>cend</name></member>
      <member refid="classnc_1_1_data_cube_1a1ea7b9bd30731c3325545fbcd2678761" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>const_iterator</name></member>
      <member refid="classnc_1_1_data_cube_1a2a2d6e331ac14ad822e3de20309e5e56" prot="private" virt="non-virtual"><scope>nc::DataCube</scope><name>cube_</name></member>
      <member refid="classnc_1_1_data_cube_1a8224b613a7c87a16e06ef08d6f90926e" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>DataCube</name></member>
      <member refid="classnc_1_1_data_cube_1a7ae08af82b0553d2b294286bdf06703b" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>DataCube</name></member>
      <member refid="classnc_1_1_data_cube_1abbaa9ebba302183cae3563c9eb371ee3" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>dump</name></member>
      <member refid="classnc_1_1_data_cube_1ad5d16b97aa14113b978a0706a32cd633" prot="private" virt="non-virtual"><scope>nc::DataCube</scope><name>elementShape_</name></member>
      <member refid="classnc_1_1_data_cube_1a9aeac78f9aec9b69b9673c1e56778b1b" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>end</name></member>
      <member refid="classnc_1_1_data_cube_1a398373aeb2f3c9dd8df78f9eac1ca3d9" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>front</name></member>
      <member refid="classnc_1_1_data_cube_1ac569e0c62a9e5cbf21228b85128a53a5" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>isempty</name></member>
      <member refid="classnc_1_1_data_cube_1a623df8fc48ba169d221b1c26249e5853" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>iterator</name></member>
      <member refid="classnc_1_1_data_cube_1a1a16b98e982d79cc6a172b8e2bfad856" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>operator[]</name></member>
      <member refid="classnc_1_1_data_cube_1a403c0b0df22fc5fa0858109fa7a65f87" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>operator[]</name></member>
      <member refid="classnc_1_1_data_cube_1a8e261e08fd074073771b98dc96726b0f" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>pop_back</name></member>
      <member refid="classnc_1_1_data_cube_1a6dc8dc7e3b15240d42baeac1fa9bdab4" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>pop_front</name></member>
      <member refid="classnc_1_1_data_cube_1a00f652afe3e8734f7d0707b12afd6a65" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>push_back</name></member>
      <member refid="classnc_1_1_data_cube_1a320959d355bddd6993d851cf67a0f88d" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>push_front</name></member>
      <member refid="classnc_1_1_data_cube_1a1e7e4ce08e0c57abb661a8f95192173e" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>shape</name></member>
      <member refid="classnc_1_1_data_cube_1a36da58aa8d2ba848746e744e82b87942" prot="public" virt="non-virtual"><scope>nc::DataCube</scope><name>size</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
