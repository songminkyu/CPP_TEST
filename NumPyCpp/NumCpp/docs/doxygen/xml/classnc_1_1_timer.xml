<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classnc_1_1_timer" kind="class" language="C++" prot="public">
    <compoundname>nc::Timer</compoundname>
    <includes refid="_timer_8hpp" local="no">Timer.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename TimeUnit</type>
        <defval>std::chrono::milliseconds</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnc_1_1_timer_1a968ad8ca046ae73671e211e644682c8d" prot="public" static="no">
        <type>std::chrono::high_resolution_clock</type>
        <definition>using nc::Timer&lt; TimeUnit &gt;::ChronoClock =  std::chrono::high_resolution_clock</definition>
        <argsstring></argsstring>
        <name>ChronoClock</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="47" column="9" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="classnc_1_1_timer_1a29e54a50e709622942a33e70b1b1e8f6" prot="public" static="no">
        <type>std::chrono::time_point&lt; <ref refid="classnc_1_1_timer_1a968ad8ca046ae73671e211e644682c8d" kindref="member">ChronoClock</ref> &gt;</type>
        <definition>using nc::Timer&lt; TimeUnit &gt;::TimePoint =  std::chrono::time_point&lt;ChronoClock&gt;</definition>
        <argsstring></argsstring>
        <name>TimePoint</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="48" column="9" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="48" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnc_1_1_timer_1a52e5ae0218fac907c758519bdfa4ce39" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string nc::Timer&lt; TimeUnit &gt;::name_</definition>
        <argsstring></argsstring>
        <name>name_</name>
        <initializer>{ &quot;&quot; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="126" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="126" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1_timer_1a890f4041ecfbe82a171d31de4c93221f" prot="private" static="no" mutable="no">
        <type><ref refid="classnc_1_1_timer_1a29e54a50e709622942a33e70b1b1e8f6" kindref="member">TimePoint</ref></type>
        <definition>TimePoint nc::Timer&lt; TimeUnit &gt;::start_</definition>
        <argsstring></argsstring>
        <name>start_</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="128" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="128" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1_timer_1a180b0c239172ed02e9dd4fabd41de2c8" prot="private" static="no" mutable="no">
        <type>std::string</type>
        <definition>std::string nc::Timer&lt; TimeUnit &gt;::unit_</definition>
        <argsstring></argsstring>
        <name>unit_</name>
        <initializer>{ &quot;&quot; }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="127" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="127" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnc_1_1_timer_1a5dabfba271b3655326e46c633eabd70e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::Timer&lt; TimeUnit &gt;::Timer</definition>
        <argsstring>()</argsstring>
        <name>Timer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="54" column="9" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="54" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_timer_1a4ede5d1d2cdf6b97bec93b0954ddb610" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>nc::Timer&lt; TimeUnit &gt;::Timer</definition>
        <argsstring>(const std::string &amp;inName)</argsstring>
        <name>Timer</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>inName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inName</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="66" column="9" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="66" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_timer_1a88dd680a63b38ae9989a40878a8fd65b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::Timer&lt; TimeUnit &gt;::setName</definition>
        <argsstring>(const std::string &amp;inName)</argsstring>
        <name>setName</name>
        <param>
          <type>const std::string &amp;</type>
          <declname>inName</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sets/changes the timer name</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inName</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="79" column="14" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="79" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_timer_1a9fec514ed605a11c6e1c321041960d7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::Timer&lt; TimeUnit &gt;::sleep</definition>
        <argsstring>(uint32 length)</argsstring>
        <name>sleep</name>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>length</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Sleeps the current thread</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>the length of time to sleep </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="90" column="14" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_timer_1a4a08ec3e6ba7a7979cb9e72d0cf3f2f7" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::Timer&lt; TimeUnit &gt;::tic</definition>
        <argsstring>() noexcept</argsstring>
        <name>tic</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Starts the timer </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="99" column="14" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="99" bodyend="102"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1_timer_1a317fde3b5e7444328adf6484e0ec832e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1a773f8535ba713f886e9e1b8378f6d76d" kindref="member">uint64</ref></type>
        <definition>uint64 nc::Timer&lt; TimeUnit &gt;::toc</definition>
        <argsstring>(bool printElapsedTime=true)</argsstring>
        <name>toc</name>
        <param>
          <type>bool</type>
          <declname>printElapsedTime</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Stops the timer</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>printElapsedTime</parametername>
</parameternamelist>
<parameterdescription>
<para>bool whether or not to print the elapsed time to the console </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>ellapsed time in specified time units </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="112" column="16" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="112" bodyend="122"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnc_1_1_timer_1ab3525068b39a9a0cfbce91908ca1974c" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::Timer&lt; TimeUnit &gt;::setUnits</definition>
        <argsstring>()</argsstring>
        <name>setUnits</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="130" column="14" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="130" bodyend="160"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>A timer class for timing code execution. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nc::Timer&lt; TimeUnit &gt;</label>
        <link refid="classnc_1_1_timer"/>
      </node>
    </collaborationgraph>
    <location file="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" line="44" column="1" bodyfile="C:/Github/NumCpp/include/NumCpp/Core/Timer.hpp" bodystart="43" bodyend="161"/>
    <listofallmembers>
      <member refid="classnc_1_1_timer_1a968ad8ca046ae73671e211e644682c8d" prot="public" virt="non-virtual"><scope>nc::Timer</scope><name>ChronoClock</name></member>
      <member refid="classnc_1_1_timer_1a52e5ae0218fac907c758519bdfa4ce39" prot="private" virt="non-virtual"><scope>nc::Timer</scope><name>name_</name></member>
      <member refid="classnc_1_1_timer_1a88dd680a63b38ae9989a40878a8fd65b" prot="public" virt="non-virtual"><scope>nc::Timer</scope><name>setName</name></member>
      <member refid="classnc_1_1_timer_1ab3525068b39a9a0cfbce91908ca1974c" prot="private" virt="non-virtual"><scope>nc::Timer</scope><name>setUnits</name></member>
      <member refid="classnc_1_1_timer_1a9fec514ed605a11c6e1c321041960d7e" prot="public" virt="non-virtual"><scope>nc::Timer</scope><name>sleep</name></member>
      <member refid="classnc_1_1_timer_1a890f4041ecfbe82a171d31de4c93221f" prot="private" virt="non-virtual"><scope>nc::Timer</scope><name>start_</name></member>
      <member refid="classnc_1_1_timer_1a4a08ec3e6ba7a7979cb9e72d0cf3f2f7" prot="public" virt="non-virtual"><scope>nc::Timer</scope><name>tic</name></member>
      <member refid="classnc_1_1_timer_1a29e54a50e709622942a33e70b1b1e8f6" prot="public" virt="non-virtual"><scope>nc::Timer</scope><name>TimePoint</name></member>
      <member refid="classnc_1_1_timer_1a5dabfba271b3655326e46c633eabd70e" prot="public" virt="non-virtual"><scope>nc::Timer</scope><name>Timer</name></member>
      <member refid="classnc_1_1_timer_1a4ede5d1d2cdf6b97bec93b0954ddb610" prot="public" virt="non-virtual"><scope>nc::Timer</scope><name>Timer</name></member>
      <member refid="classnc_1_1_timer_1a317fde3b5e7444328adf6484e0ec832e" prot="public" virt="non-virtual"><scope>nc::Timer</scope><name>toc</name></member>
      <member refid="classnc_1_1_timer_1a180b0c239172ed02e9dd4fabd41de2c8" prot="private" virt="non-virtual"><scope>nc::Timer</scope><name>unit_</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
