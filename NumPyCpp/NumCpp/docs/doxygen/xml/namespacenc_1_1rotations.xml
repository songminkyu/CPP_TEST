<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacenc_1_1rotations" kind="namespace" language="C++">
    <compoundname>nc::rotations</compoundname>
    <innerclass refid="classnc_1_1rotations_1_1_d_c_m" prot="public">nc::rotations::DCM</innerclass>
    <innerclass refid="classnc_1_1rotations_1_1_quaternion" prot="public">nc::rotations::Quaternion</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacenc_1_1rotations_1ab0fbd9345e707b6efb023ec9b354fbb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::rotations::rodriguesRotation</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;k, double theta, const NdArray&lt; dtype &gt; &amp;v)</argsstring>
        <name>rodriguesRotation</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs Rodriques&apos; rotation formula <ulink url="https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula">https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the axis to rotate around </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle in radians to rotate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to rotate</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray&lt;double&gt;</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Rotations/rodriguesRotation.hpp" line="83" column="17" bodyfile="C:/Github/NumCpp/include/NumCpp/Rotations/rodriguesRotation.hpp" bodystart="83" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1rotations_1ae7d7397eec3edcfbd8b6b9784ad2fd1c" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref></type>
        <definition>Vec3 nc::rotations::rodriguesRotation</definition>
        <argsstring>(const Vec3 &amp;k, double theta, const Vec3 &amp;v) noexcept</argsstring>
        <name>rodriguesRotation</name>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>k</declname>
        </param>
        <param>
          <type>double</type>
          <declname>theta</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performs Rodriques&apos; rotation formula <ulink url="https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula">https://en.wikipedia.org/wiki/Rodrigues%27_rotation_formula</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>the axis to rotate around </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>theta</parametername>
</parameternamelist>
<parameterdescription>
<para>the angle in radians to rotate </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>v</parametername>
</parameternamelist>
<parameterdescription>
<para>the vector to rotate</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_vec3" kindref="compound">Vec3</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Rotations/rodriguesRotation.hpp" line="52" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Rotations/rodriguesRotation.hpp" bodystart="52" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1rotations_1a6da89864a9512bbe69c848dad18220b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::rotations::wahbasProblem</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;wk, const NdArray&lt; dtype &gt; &amp;vk)</argsstring>
        <name>wahbasProblem</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>wk</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>vk</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds a rotation matrix (special orthogonal matrix) between two coordinate systems from a set of (weighted) vector observations. Solutions to Wahba&apos;s problem are often used in satellite attitude determination utilising sensors such as magnetometers and multi-antenna GPS receivers <ulink url="https://en.wikipedia.org/wiki/Wahba%27s_problem">https://en.wikipedia.org/wiki/Wahba%27s_problem</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wk</parametername>
</parameternamelist>
<parameterdescription>
<para>k-th 3-vector measurement in the reference frame </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vk</parametername>
</parameternamelist>
<parameterdescription>
<para>corresponding k-th 3-vector measurement in the body frame</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> rotation matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Rotations/wahbasProblem.hpp" line="128" column="17" bodyfile="C:/Github/NumCpp/include/NumCpp/Rotations/wahbasProblem.hpp" bodystart="128" bodyend="132"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1rotations_1a84a42f4e7f09b7c0e1a9307cb5b6f281" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt;</type>
        <definition>NdArray&lt;double&gt; nc::rotations::wahbasProblem</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;wk, const NdArray&lt; dtype &gt; &amp;vk, const NdArray&lt; dtype &gt; &amp;ak)</argsstring>
        <name>wahbasProblem</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>wk</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>vk</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>ak</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds a rotation matrix (special orthogonal matrix) between two coordinate systems from a set of (weighted) vector observations. Solutions to Wahba&apos;s problem are often used in satellite attitude determination utilising sensors such as magnetometers and multi-antenna GPS receivers <ulink url="https://en.wikipedia.org/wiki/Wahba%27s_problem">https://en.wikipedia.org/wiki/Wahba%27s_problem</ulink></para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>wk</parametername>
</parameternamelist>
<parameterdescription>
<para>k-th 3-vector measurement in the reference frame (n x 3 matrix) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vk</parametername>
</parameternamelist>
<parameterdescription>
<para>corresponding k-th 3-vector measurement in the body frame (n x 3 matrix) </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ak</parametername>
</parameternamelist>
<parameterdescription>
<para>set of weights for each observation (1 x n or n x 1 matrix)</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> rotation matrix </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Rotations/wahbasProblem.hpp" line="65" column="17" bodyfile="C:/Github/NumCpp/include/NumCpp/Rotations/wahbasProblem.hpp" bodystart="65" bodyend="112"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Github/NumCpp/include/NumCpp/Rotations/DCM.hpp" line="42" column="1"/>
  </compounddef>
</doxygen>
