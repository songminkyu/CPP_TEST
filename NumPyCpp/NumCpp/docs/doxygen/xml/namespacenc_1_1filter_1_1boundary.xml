<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacenc_1_1filter_1_1boundary" kind="namespace" language="C++">
    <compoundname>nc::filter::boundary</compoundname>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1a794f239834d31e60ad7c9d5a552e3f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::addBoundary1d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, Boundary inBoundaryType, uint32 inKernalSize, dtype inConstantValue=0)</argsstring>
        <name>addBoundary1d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1_1filter_1ada517a46ea965fa51ed51101135c6ac6" kindref="member">Boundary</ref></type>
          <declname>inBoundaryType</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inKernalSize</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>inConstantValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wrap boundary</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundaryType</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inKernalSize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inConstantValue</parametername>
</parameternamelist>
<parameterdescription>
<para>(default 0) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/addBoundary1d.hpp" line="62" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/addBoundary1d.hpp" bodystart="62" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1a43e1dba909451a24518231243181d79d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::addBoundary2d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, Boundary inBoundaryType, uint32 inKernalSize, dtype inConstantValue=0)</argsstring>
        <name>addBoundary2d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1_1filter_1ada517a46ea965fa51ed51101135c6ac6" kindref="member">Boundary</ref></type>
          <declname>inBoundaryType</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inKernalSize</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>inConstantValue</declname>
          <defval>0</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wrap boundary</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundaryType</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inKernalSize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inConstantValue</parametername>
</parameternamelist>
<parameterdescription>
<para>(default 0) </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/addBoundary2d.hpp" line="62" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/addBoundary2d.hpp" bodystart="62" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1a09c2e0a7f9ff3c1fbbbee0136d80a2e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::constant1d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, uint32 inBoundarySize, dtype inConstantValue)</argsstring>
        <name>constant1d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBoundarySize</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>inConstantValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constant boundary1d</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundarySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inConstantValue</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/constant1d.hpp" line="53" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/constant1d.hpp" bodystart="53" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1a0e0bd2ad1d6ac1b1d248175b9bc422f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::constant2d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, uint32 inBoundarySize, dtype inConstantValue)</argsstring>
        <name>constant2d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBoundarySize</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>inConstantValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constant boundary</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundarySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inConstantValue</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/constant2d.hpp" line="55" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/constant2d.hpp" bodystart="55" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1ac78b1c70b5d7e26d6013674cdb84690a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nc::filter::boundary::fillCorners</definition>
        <argsstring>(NdArray&lt; dtype &gt; &amp;inArray, uint32 inBorderWidth)</argsstring>
        <name>fillCorners</name>
        <param>
          <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArray</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBorderWidth</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>extends the corner values</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBorderWidth</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/fillCorners.hpp" line="51" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/fillCorners.hpp" bodystart="51" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1ac2c4c5858898760f48e5aba06ad0eb3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type>void</type>
        <definition>void nc::filter::boundary::fillCorners</definition>
        <argsstring>(NdArray&lt; dtype &gt; &amp;inArray, uint32 inBorderWidth, dtype inFillValue)</argsstring>
        <name>fillCorners</name>
        <param>
          <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inArray</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBorderWidth</declname>
        </param>
        <param>
          <type>dtype</type>
          <declname>inFillValue</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>extends the corner values</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBorderWidth</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inFillValue</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/fillCorners.hpp" line="85" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/fillCorners.hpp" bodystart="85" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1aaeb7c9f1da6f817190da9daa622c9c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::mirror1d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, uint32 inBoundarySize)</argsstring>
        <name>mirror1d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBoundarySize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mirror boundary1d</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundarySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/mirror1d.hpp" line="53" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/mirror1d.hpp" bodystart="53" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1a2aaf003bb59428d53d1849dd188e10b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::mirror2d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, uint32 inBoundarySize)</argsstring>
        <name>mirror2d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBoundarySize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Mirror boundary</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundarySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/mirror2d.hpp" line="54" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/mirror2d.hpp" bodystart="54" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1ac5f60c43aa94490993eee9fcc1e105b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::nearest1d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, uint32 inBoundarySize)</argsstring>
        <name>nearest1d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBoundarySize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest boundary1d</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundarySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/nearest1d.hpp" line="51" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/nearest1d.hpp" bodystart="51" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1a7f70d66ead018652239bb3334a040850" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::nearest2d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, uint32 inBoundarySize)</argsstring>
        <name>nearest2d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBoundarySize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Nearest boundary</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundarySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/nearest2d.hpp" line="54" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/nearest2d.hpp" bodystart="54" bodyend="95"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1ac423cb3e19b12651c02c2c16d0723b3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::reflect1d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, uint32 inBoundarySize)</argsstring>
        <name>reflect1d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBoundarySize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reflects the boundaries</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundarySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/reflect1d.hpp" line="53" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/reflect1d.hpp" bodystart="53" bodyend="70"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1add9a7d70820161e370ecd37212b1f397" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::reflect2d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, uint32 inBoundarySize)</argsstring>
        <name>reflect2d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBoundarySize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Reflects the boundaries</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundarySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/reflect2d.hpp" line="55" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/reflect2d.hpp" bodystart="55" bodyend="114"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1abe0b187c76c106e821b9ff94ef280d39" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::trimBoundary1d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImageWithBoundary, uint32 inSize)</argsstring>
        <name>trimBoundary1d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImageWithBoundary</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>trims the boundary off to make the image back to the original size</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImageWithBoundary</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inSize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/trimBoundary1d.hpp" line="52" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/trimBoundary1d.hpp" bodystart="52" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1aeff17b6fddc47bd2220fb912b2429162" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::trimBoundary2d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImageWithBoundary, uint32 inSize)</argsstring>
        <name>trimBoundary2d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImageWithBoundary</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>trims the boundary off to make the image back to the original size</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImageWithBoundary</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inSize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/trimBoundary2d.hpp" line="53" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/trimBoundary2d.hpp" bodystart="53" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1aa318761ec07aeb7764e2e5f0a7ec9e86" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::wrap1d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, uint32 inBoundarySize)</argsstring>
        <name>wrap1d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBoundarySize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wrap boundary1d</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundarySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/wrap1d.hpp" line="52" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/wrap1d.hpp" bodystart="52" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1filter_1_1boundary_1aeace2e548cf6ecf3aaadbbf000cbead7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename dtype</type>
          </param>
        </templateparamlist>
        <type><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt;</type>
        <definition>NdArray&lt;dtype&gt; nc::filter::boundary::wrap2d</definition>
        <argsstring>(const NdArray&lt; dtype &gt; &amp;inImage, uint32 inBoundarySize)</argsstring>
        <name>wrap2d</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; dtype &gt; &amp;</type>
          <declname>inImage</declname>
        </param>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inBoundarySize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Wrap boundary</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inImage</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inBoundarySize</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/wrap2d.hpp" line="54" column="21" bodyfile="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries2d/wrap2d.hpp" bodystart="54" bodyend="107"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Github/NumCpp/include/NumCpp/Filter/Boundaries/Boundaries1d/addBoundary1d.hpp" line="49" column="1"/>
  </compounddef>
</doxygen>
