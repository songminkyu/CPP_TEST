<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="namespacenc_1_1coordinates" kind="namespace" language="C++">
    <compoundname>nc::coordinates</compoundname>
    <innerclass refid="classnc_1_1coordinates_1_1_coordinate" prot="public">nc::coordinates::Coordinate</innerclass>
    <innerclass refid="classnc_1_1coordinates_1_1_dec" prot="public">nc::coordinates::Dec</innerclass>
    <innerclass refid="classnc_1_1coordinates_1_1_r_a" prot="public">nc::coordinates::RA</innerclass>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="namespacenc_1_1coordinates_1a07a05f0462e5f74f05cbd04664c4ca94" prot="public" static="no" strong="yes">
        <type></type>
        <name>Sign</name>
        <enumvalue id="namespacenc_1_1coordinates_1a07a05f0462e5f74f05cbd04664c4ca94a50546bf973283065b6ccf09faf7a580a" prot="public">
          <name>NEGATIVE</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="namespacenc_1_1coordinates_1a07a05f0462e5f74f05cbd04664c4ca94aab6c31432785221bae58327ef5f6ea58" prot="public">
          <name>POSITIVE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
<para>Struct Enum for positive or negative <ref refid="classnc_1_1coordinates_1_1_dec" kindref="compound">Dec</ref> angle. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Coordinates/Dec.hpp" line="47" column="24" bodyfile="C:/Github/NumCpp/include/NumCpp/Coordinates/Dec.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespacenc_1_1coordinates_1a06135e21507cfe2aa1cb4154fe1702bf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::coordinates::degreeSeperation</definition>
        <argsstring>(const Coordinate &amp;inCoordinate1, const Coordinate &amp;inCoordinate2)</argsstring>
        <name>degreeSeperation</name>
        <param>
          <type>const <ref refid="classnc_1_1coordinates_1_1_coordinate" kindref="compound">Coordinate</ref> &amp;</type>
          <declname>inCoordinate1</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1coordinates_1_1_coordinate" kindref="compound">Coordinate</ref> &amp;</type>
          <declname>inCoordinate2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the degree seperation between the two Coordinates</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inCoordinate1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inCoordinate2</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>degrees </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Coordinates/degreeSeperation.hpp" line="46" column="23" bodyfile="C:/Github/NumCpp/include/NumCpp/Coordinates/degreeSeperation.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1coordinates_1abc47b2d64d107bcb19ff696ecff89edf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::coordinates::degreeSeperation</definition>
        <argsstring>(const NdArray&lt; double &gt; &amp;inVector1, const NdArray&lt; double &gt; &amp;inVector2)</argsstring>
        <name>degreeSeperation</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt; &amp;</type>
          <declname>inVector1</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt; &amp;</type>
          <declname>inVector2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the degree seperation between the <ref refid="classnc_1_1coordinates_1_1_coordinate" kindref="compound">Coordinate</ref> and the input vector</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inVector1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inVector2</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>degrees </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Coordinates/degreeSeperation.hpp" line="60" column="23" bodyfile="C:/Github/NumCpp/include/NumCpp/Coordinates/degreeSeperation.hpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1coordinates_1aa009e573b47b51d34d3aae0b152566c8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::coordinates::radianSeperation</definition>
        <argsstring>(const Coordinate &amp;inCoordinate1, const Coordinate &amp;inCoordinate2)</argsstring>
        <name>radianSeperation</name>
        <param>
          <type>const <ref refid="classnc_1_1coordinates_1_1_coordinate" kindref="compound">Coordinate</ref> &amp;</type>
          <declname>inCoordinate1</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1coordinates_1_1_coordinate" kindref="compound">Coordinate</ref> &amp;</type>
          <declname>inCoordinate2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the radian seperation between the two Coordinates</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inCoordinate1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inCoordinate2</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>radians </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Coordinates/radianSeperation.hpp" line="46" column="23" bodyfile="C:/Github/NumCpp/include/NumCpp/Coordinates/radianSeperation.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="namespacenc_1_1coordinates_1a712fd847123cfde7948c36ca59c6a435" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::coordinates::radianSeperation</definition>
        <argsstring>(const NdArray&lt; double &gt; &amp;inVector1, const NdArray&lt; double &gt; &amp;inVector2)</argsstring>
        <name>radianSeperation</name>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt; &amp;</type>
          <declname>inVector1</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1_nd_array" kindref="compound">NdArray</ref>&lt; double &gt; &amp;</type>
          <declname>inVector2</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the radian seperation between the <ref refid="classnc_1_1coordinates_1_1_coordinate" kindref="compound">Coordinate</ref> and the input vector</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inVector1</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inVector2</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>radians </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Coordinates/radianSeperation.hpp" line="60" column="23" bodyfile="C:/Github/NumCpp/include/NumCpp/Coordinates/radianSeperation.hpp" bodystart="60" bodyend="64"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="C:/Github/NumCpp/include/NumCpp/Coordinates/Coordinate.hpp" line="48" column="1"/>
  </compounddef>
</doxygen>
