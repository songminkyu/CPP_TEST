<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="_building_8md" kind="file" language="Markdown">
    <compoundname>Building.md</compoundname>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline><highlight class="normal">#<sp/>Building</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">##<sp/>A<sp/>NumCpp<sp/>&quot;Hello<sp/>World&quot;<sp/>example</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">This<sp/>example<sp/>assumes<sp/>you<sp/>have<sp/>followed<sp/>the<sp/>steps<sp/>for<sp/>installing<sp/>NumCpp<sp/>on<sp/>your<sp/>system.<sp/><sp/>You<sp/>will<sp/>also<sp/>need<sp/>to<sp/>have<sp/>CMake<sp/>installed.</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>1.<sp/>Source<sp/>File</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**main.cpp**</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```cpp</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&quot;NumCpp.hpp&quot;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;cstdlib&gt;</highlight></codeline>
<codeline><highlight class="normal">#include<sp/>&lt;iostream&gt;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">int<sp/>main()</highlight></codeline>
<codeline><highlight class="normal">{</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>auto<sp/>a<sp/>=<sp/>nc::random::randInt&lt;int&gt;({10,<sp/>10},<sp/>0,<sp/>100);</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>std::cout<sp/>&lt;&lt;<sp/>a;</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>return<sp/>EXIT_SUCCESS;</highlight></codeline>
<codeline><highlight class="normal">}</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>2.<sp/>CMakeLists.txt<sp/>file</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```cmake</highlight></codeline>
<codeline><highlight class="normal">cmake_minimum_required(VERSION<sp/>3.14)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">project(&quot;HelloWorld&quot;<sp/>CXX)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">add_executable(${PROJECT_NAME}<sp/>main.cpp)</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">find_package(NumCpp<sp/>2.1.0<sp/>REQUIRED)</highlight></codeline>
<codeline><highlight class="normal">target_link_libraries(${PROJECT_NAME}</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>NumCpp::NumCpp</highlight></codeline>
<codeline><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>3.<sp/>Build</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**SRC_DIRECTORY**<sp/>=<sp/>directory<sp/>containing<sp/>`main.cpp`<sp/>and<sp/>`CMakeLists.txt`<sp/>files</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```console</highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>cd<sp/>&lt;SRC_DIRECTORY&gt;</highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>mkdir<sp/>build</highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>cd<sp/>build</highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>cmake<sp/>..</highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>cmake<sp/>--build<sp/>.<sp/>--config<sp/>Release</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>4.<sp/>Run</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Linux</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```console</highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>./HelloWorld</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">####<sp/>Windows</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">```console</highlight></codeline>
<codeline><highlight class="normal">&gt;&gt;<sp/>HelloWorld.exe</highlight></codeline>
<codeline><highlight class="normal">```</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">###<sp/>Alternative</highlight></codeline>
<codeline></codeline>
<codeline><highlight class="normal">**NumCpp**<sp/>is<sp/>a<sp/>header<sp/>only<sp/>library<sp/>so<sp/>you<sp/>can<sp/>of<sp/>course<sp/>simply<sp/>add<sp/>the<sp/>NumCpp<sp/>include<sp/>directory<sp/>to<sp/>your<sp/>build<sp/>system&apos;s<sp/>include<sp/>directories<sp/>and<sp/>build<sp/>that<sp/>way.<sp/><sp/>However,<sp/>`find_package(NumCpp)`<sp/>takes<sp/>care<sp/>of<sp/>finding<sp/>and<sp/>linking<sp/>in<sp/>the<sp/>**Boost**<sp/>headers<sp/>automatically,<sp/>so<sp/>if<sp/>you<sp/>add<sp/>the<sp/>NumCpp<sp/>headers<sp/>manually<sp/>you<sp/>will<sp/>need<sp/>to<sp/>manually<sp/>include<sp/>the<sp/>**Boost**<sp/>headers<sp/>as<sp/>well.</highlight></codeline>
    </programlisting>
    <location file="C:/Github/NumCpp/docs/markdown/Building.md"/>
  </compounddef>
</doxygen>
