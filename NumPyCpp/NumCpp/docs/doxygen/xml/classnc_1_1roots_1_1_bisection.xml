<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classnc_1_1roots_1_1_bisection" kind="class" language="C++" prot="public">
    <compoundname>nc::roots::Bisection</compoundname>
    <basecompoundref refid="classnc_1_1roots_1_1_iteration" prot="public" virt="non-virtual">nc::roots::Iteration</basecompoundref>
    <includes refid="_bisection_8hpp" local="no">Bisection.hpp</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnc_1_1roots_1_1_bisection_1ae6357e144a2b1fbb225d086de3cc3954" prot="private" static="no" mutable="no">
        <type>const std::function&lt; double(double)&gt;</type>
        <definition>const std::function&lt;double(double)&gt; nc::roots::Bisection::f_</definition>
        <argsstring></argsstring>
        <name>f_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" line="116" column="33" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnc_1_1roots_1_1_bisection_1a05985162d3dac7a0919319c6cde74895" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>nc::roots::Bisection::Bisection</definition>
        <argsstring>(const double epsilon, const uint32 maxNumIterations, std::function&lt; double(double)&gt; f) noexcept</argsstring>
        <name>Bisection</name>
        <param>
          <type>const double</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>const <ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>maxNumIterations</declname>
        </param>
        <param>
          <type>std::function&lt; double(double)&gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>the epsilon value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxNumIterations</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum number of iterations to perform </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>the function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" line="74" column="13" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" bodystart="74" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1roots_1_1_bisection_1ae9ccce420ccf01a829b0138f264956cb" prot="public" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>nc::roots::Bisection::Bisection</definition>
        <argsstring>(const double epsilon, std::function&lt; double(double)&gt; f) noexcept</argsstring>
        <name>Bisection</name>
        <param>
          <type>const double</type>
          <declname>epsilon</declname>
        </param>
        <param>
          <type>std::function&lt; double(double)&gt;</type>
          <declname>f</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>epsilon</parametername>
</parameternamelist>
<parameterdescription>
<para>the epsilon value </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>f</parametername>
</parameternamelist>
<parameterdescription>
<para>the function </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" line="60" column="13" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" bodystart="60" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1roots_1_1_bisection_1a5e0d0c67681add5f2feec713901539df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nc::roots::Bisection::~Bisection</definition>
        <argsstring>() override=default</argsstring>
        <name>~Bisection</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Destructor </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" line="85" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1roots_1_1_iteration_1ab3192d0f9de4b8b27b23013c65489e5a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::roots::Iteration::numIterations</definition>
        <argsstring>() const noexcept</argsstring>
        <name>numIterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the number of iterations</para>
<para><simplesect kind="return"><para>: number of iterations </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" line="84" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" bodystart="84" bodyend="87"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1roots_1_1_bisection_1a1199a68b6f57fee8b24bfc59ffeff486" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::roots::Bisection::solve</definition>
        <argsstring>(double a, double b)</argsstring>
        <name>solve</name>
        <param>
          <type>double</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Solves for the root in the range [a, b]</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the lower bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>root between the bound </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" line="95" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" bodystart="95" bodyend="112"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnc_1_1roots_1_1_bisection_1a635b6eb837b7357b1aabf4cc1e3b4274" prot="private" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::roots::Bisection::checkAndFixAlgorithmCriteria</definition>
        <argsstring>(double &amp;a, double &amp;b) const noexcept</argsstring>
        <name>checkAndFixAlgorithmCriteria</name>
        <param>
          <type>double &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>b</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Checks the bounds criteria</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the lower bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" line="125" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" bodystart="125" bodyend="132"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-static-func">
      <memberdef kind="function" id="classnc_1_1roots_1_1_bisection_1a5939d0d88e4de28c537dbdfed0ce848c" prot="private" static="yes" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>static double nc::roots::Bisection::calculateX</definition>
        <argsstring>(double x, double &amp;a, double &amp;b, double fx) noexcept</argsstring>
        <name>calculateX</name>
        <param>
          <type>double</type>
          <declname>x</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>a</declname>
        </param>
        <param>
          <type>double &amp;</type>
          <declname>b</declname>
        </param>
        <param>
          <type>double</type>
          <declname>fx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calculates the bisection point</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>x</parametername>
</parameternamelist>
<parameterdescription>
<para>the evaluation point </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>a</parametername>
</parameternamelist>
<parameterdescription>
<para>the lower bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>b</parametername>
</parameternamelist>
<parameterdescription>
<para>the upper bound </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fx</parametername>
</parameternamelist>
<parameterdescription>
<para>the function evaluated at x </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>x </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" line="144" column="27" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" bodystart="144" bodyend="156"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classnc_1_1roots_1_1_iteration_1a5eafe219bb90f82da4ece84f012a411a" prot="protected" static="no" mutable="no">
        <type>const double</type>
        <definition>const double nc::roots::Iteration::epsilon_</definition>
        <argsstring></argsstring>
        <name>epsilon_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" line="115" column="29" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" bodystart="115" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1roots_1_1_iteration_1a9b1c4ea8cf91c5308020c105293b4a02" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::roots::Iteration::maxNumIterations_</definition>
        <argsstring></argsstring>
        <name>maxNumIterations_</name>
        <initializer>{1000}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" line="116" column="29" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" bodystart="116" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1roots_1_1_iteration_1a84d7f2f7412d1f54861edeacc7bc0c20" prot="protected" static="no" mutable="no">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::roots::Iteration::numIterations_</definition>
        <argsstring></argsstring>
        <name>numIterations_</name>
        <initializer>{0}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" line="117" column="29" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" bodystart="117" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="protected-func">
      <memberdef kind="function" id="classnc_1_1roots_1_1_iteration_1ad0262a1a694e734ebc154c77f010bcff" prot="protected" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::roots::Iteration::incrementNumberOfIterations</definition>
        <argsstring>()</argsstring>
        <name>incrementNumberOfIterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Incraments the number of iterations</para>
<para><simplesect kind="return"><para>the number of iterations prior to incramenting </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" line="105" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" bodystart="105" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1roots_1_1_iteration_1a85e79a4794bc3a6ac6bc3564956737a2" prot="protected" static="no" const="no" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::roots::Iteration::resetNumberOfIterations</definition>
        <argsstring>() noexcept</argsstring>
        <name>resetNumberOfIterations</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Resets the number of iterations </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" line="94" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Iteration.hpp" bodystart="94" bodyend="97"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classnc_1_1roots_1_1_bisection" kindref="compound">Bisection</ref> root finding method </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>nc::roots::Iteration</label>
        <link refid="classnc_1_1roots_1_1_iteration"/>
      </node>
      <node id="1">
        <label>nc::roots::Bisection</label>
        <link refid="classnc_1_1roots_1_1_bisection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>nc::roots::Iteration</label>
        <link refid="classnc_1_1roots_1_1_iteration"/>
      </node>
      <node id="1">
        <label>nc::roots::Bisection</label>
        <link refid="classnc_1_1roots_1_1_bisection"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" line="51" column="1" bodyfile="C:/Github/NumCpp/include/NumCpp/Roots/Bisection.hpp" bodystart="50" bodyend="157"/>
    <listofallmembers>
      <member refid="classnc_1_1roots_1_1_bisection_1ae9ccce420ccf01a829b0138f264956cb" prot="public" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>Bisection</name></member>
      <member refid="classnc_1_1roots_1_1_bisection_1a05985162d3dac7a0919319c6cde74895" prot="public" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>Bisection</name></member>
      <member refid="classnc_1_1roots_1_1_bisection_1a5939d0d88e4de28c537dbdfed0ce848c" prot="private" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>calculateX</name></member>
      <member refid="classnc_1_1roots_1_1_bisection_1a635b6eb837b7357b1aabf4cc1e3b4274" prot="private" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>checkAndFixAlgorithmCriteria</name></member>
      <member refid="classnc_1_1roots_1_1_iteration_1a5eafe219bb90f82da4ece84f012a411a" prot="protected" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>epsilon_</name></member>
      <member refid="classnc_1_1roots_1_1_bisection_1ae6357e144a2b1fbb225d086de3cc3954" prot="private" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>f_</name></member>
      <member refid="classnc_1_1roots_1_1_iteration_1ad0262a1a694e734ebc154c77f010bcff" prot="protected" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>incrementNumberOfIterations</name></member>
      <member refid="classnc_1_1roots_1_1_iteration_1a2d7285a81c033d56ce8283b6dbfca136" prot="public" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>Iteration</name></member>
      <member refid="classnc_1_1roots_1_1_iteration_1a7948f08cfaa01f5685ec35149bf6bba0" prot="public" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>Iteration</name></member>
      <member refid="classnc_1_1roots_1_1_iteration_1a9b1c4ea8cf91c5308020c105293b4a02" prot="protected" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>maxNumIterations_</name></member>
      <member refid="classnc_1_1roots_1_1_iteration_1ab3192d0f9de4b8b27b23013c65489e5a" prot="public" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>numIterations</name></member>
      <member refid="classnc_1_1roots_1_1_iteration_1a84d7f2f7412d1f54861edeacc7bc0c20" prot="protected" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>numIterations_</name></member>
      <member refid="classnc_1_1roots_1_1_iteration_1a85e79a4794bc3a6ac6bc3564956737a2" prot="protected" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>resetNumberOfIterations</name></member>
      <member refid="classnc_1_1roots_1_1_bisection_1a1199a68b6f57fee8b24bfc59ffeff486" prot="public" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>solve</name></member>
      <member refid="classnc_1_1roots_1_1_bisection_1a5e0d0c67681add5f2feec713901539df" prot="public" virt="non-virtual"><scope>nc::roots::Bisection</scope><name>~Bisection</name></member>
      <member refid="classnc_1_1roots_1_1_iteration_1a44492e4a1849938cd7017154213ec002" prot="public" virt="virtual"><scope>nc::roots::Bisection</scope><name>~Iteration</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
