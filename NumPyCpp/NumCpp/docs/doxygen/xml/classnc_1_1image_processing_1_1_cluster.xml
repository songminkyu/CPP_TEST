<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="classnc_1_1image_processing_1_1_cluster" kind="class" language="C++" prot="public">
    <compoundname>nc::imageProcessing::Cluster</compoundname>
    <includes refid="_cluster_8hpp" local="no">Cluster.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename dtype</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-type">
      <memberdef kind="typedef" id="classnc_1_1image_processing_1_1_cluster_1a3b344c255dfcfcf18e0fc9f1e84979ae" prot="public" static="no">
        <type>typename std::vector&lt; <ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref>&lt; dtype &gt; &gt;::<ref refid="classnc_1_1image_processing_1_1_cluster_1a3b344c255dfcfcf18e0fc9f1e84979ae" kindref="member">const_iterator</ref></type>
        <definition>using nc::imageProcessing::Cluster&lt; dtype &gt;::const_iterator =  typename std::vector&lt;Pixel&lt;dtype&gt; &gt;::const_iterator</definition>
        <argsstring></argsstring>
        <name>const_iterator</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="61" column="13" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="61" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_cluster_1ac27217e60395adcc05fe920f3dced020" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenc_1a9386099a0fdc2bc9fb0dbfde5606584d" kindref="member">int32</ref></type>
        <definition>int32 nc::imageProcessing::Cluster&lt; dtype &gt;::clusterId_</definition>
        <argsstring></argsstring>
        <name>clusterId_</name>
        <initializer>{ -1 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="374" column="41" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="374" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_cluster_1a1634359cd3f10391565151e78301973e" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::colMax_</definition>
        <argsstring></argsstring>
        <name>colMax_</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="380" column="41" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="380" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_cluster_1ac4edaf69806fe90f204285a65cc46c0c" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::colMin_</definition>
        <argsstring></argsstring>
        <name>colMin_</name>
        <initializer>{ std::numeric_limits&lt;<ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref>&gt;::<ref refid="namespacenc_1a4d5872f22ac07aeba503857cb5948bc1" kindref="member">max</ref>() }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="379" column="41" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="379" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_cluster_1a46f31e73fc6a7be03d6cf21aa601adc4" prot="private" static="no" mutable="no">
        <type>double</type>
        <definition>double nc::imageProcessing::Cluster&lt; dtype &gt;::eod_</definition>
        <argsstring></argsstring>
        <name>eod_</name>
        <initializer>{ 1.0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="385" column="41" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="385" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_cluster_1a735d3007148f230dca16fc9aa6ead3a9" prot="private" static="no" mutable="no">
        <type>dtype</type>
        <definition>dtype nc::imageProcessing::Cluster&lt; dtype &gt;::intensity_</definition>
        <argsstring></argsstring>
        <name>intensity_</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="382" column="41" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="382" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_cluster_1a91e17e6f7f328711d7a283b9b400c155" prot="private" static="no" mutable="no">
        <type>dtype</type>
        <definition>dtype nc::imageProcessing::Cluster&lt; dtype &gt;::peakPixelIntensity_</definition>
        <argsstring></argsstring>
        <name>peakPixelIntensity_</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="383" column="41" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="383" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_cluster_1ad6f3b6a6ef813f7f3ea1e6b3c3467c53" prot="private" static="no" mutable="no">
        <type>std::vector&lt; <ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref>&lt; dtype &gt; &gt;</type>
        <definition>std::vector&lt;Pixel&lt;dtype&gt; &gt; nc::imageProcessing::Cluster&lt; dtype &gt;::pixels_</definition>
        <argsstring></argsstring>
        <name>pixels_</name>
        <initializer>{}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="375" column="26" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="375" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_cluster_1afbcacf780ff8945742acdac326ed35cb" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::rowMax_</definition>
        <argsstring></argsstring>
        <name>rowMax_</name>
        <initializer>{ 0 }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="378" column="41" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="378" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classnc_1_1image_processing_1_1_cluster_1a1925205dd98b998c8aeedfc58dc6b8c5" prot="private" static="no" mutable="no">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::rowMin_</definition>
        <argsstring></argsstring>
        <name>rowMin_</name>
        <initializer>{ std::numeric_limits&lt;<ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref>&gt;::<ref refid="namespacenc_1a4d5872f22ac07aeba503857cb5948bc1" kindref="member">max</ref>() }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="377" column="41" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="377" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a86ad5f6477f3f23b62d868c748014c42" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nc::imageProcessing::Cluster&lt; dtype &gt;::STATIC_ASSERT_ARITHMETIC</definition>
        <argsstring>(dtype)</argsstring>
        <name>STATIC_ASSERT_ARITHMETIC</name>
        <param>
          <type>dtype</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="57" column="13"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a9c84aca9710bec5c721fd6a9f94182c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>nc::imageProcessing::Cluster&lt; dtype &gt;::Cluster</definition>
        <argsstring>()=default</argsstring>
        <name>Cluster</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default constructor needed by containers </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="67" column="13"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a73ce20625b5ca5d9e0d872cc8ad885dc" prot="public" static="no" const="no" explicit="yes" inline="yes" noexcept="yes" virt="non-virtual">
        <type></type>
        <definition>nc::imageProcessing::Cluster&lt; dtype &gt;::Cluster</definition>
        <argsstring>(uint32 inClusterId) noexcept</argsstring>
        <name>Cluster</name>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inClusterId</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructor</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inClusterId</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="76" column="22" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="76" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a9cab13be79b63d9151e60a798ca39cb5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::imageProcessing::Cluster&lt; dtype &gt;::addPixel</definition>
        <argsstring>(const Pixel&lt; dtype &gt; &amp;inPixel)</argsstring>
        <name>addPixel</name>
        <param>
          <type>const <ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref>&lt; dtype &gt; &amp;</type>
          <declname>inPixel</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>adds a pixel to the cluster</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inPixel</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="312" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="312" bodyend="326"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a5a8d82d40cea566786e8f80ad72a6d10" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref>&lt; dtype &gt; &amp;</type>
        <definition>const Pixel&lt;dtype&gt;&amp; nc::imageProcessing::Cluster&lt; dtype &gt;::at</definition>
        <argsstring>(uint32 inIndex) const</argsstring>
        <name>at</name>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>access method with bounds checking</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="140" column="25" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="140" bodyend="147"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a6e761b470453d5506015b9332b12e4a4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1image_processing_1_1_cluster_1a3b344c255dfcfcf18e0fc9f1e84979ae" kindref="member">const_iterator</ref></type>
        <definition>const_iterator nc::imageProcessing::Cluster&lt; dtype &gt;::begin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns in iterator to the beginning pixel of the cluster</para>
<para><simplesect kind="return"><para>const_iterator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="156" column="28" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1abcc9f76b1d903546a3604ef87795d37e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::clusterId</definition>
        <argsstring>() const noexcept</argsstring>
        <name>clusterId</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the minimum row number of the cluster</para>
<para><simplesect kind="return"><para>minimum row number of the cluster </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="192" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="192" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a8c884e5e55d41c09165bca85446edb1f" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::colMax</definition>
        <argsstring>() const noexcept</argsstring>
        <name>colMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the maximum column number of the cluster</para>
<para><simplesect kind="return"><para>maximum column number of the cluster </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="240" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="240" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a27734d0fa45c7440e3018fa36c6633f9" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::colMin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>colMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the minimum column number of the cluster</para>
<para><simplesect kind="return"><para>minimum column number of the cluster </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="228" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1afc8b5d168cf1d611be9f5226ec7efd55" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="classnc_1_1image_processing_1_1_cluster_1a3b344c255dfcfcf18e0fc9f1e84979ae" kindref="member">const_iterator</ref></type>
        <definition>const_iterator nc::imageProcessing::Cluster&lt; dtype &gt;::end</definition>
        <argsstring>() const noexcept</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns in iterator to the 1 past the end pixel of the cluster</para>
<para><simplesect kind="return"><para>const_iterator </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="168" column="28" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="168" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a461863af036452bdb1813dfff33c7c42" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>double</type>
        <definition>double nc::imageProcessing::Cluster&lt; dtype &gt;::eod</definition>
        <argsstring>() const noexcept</argsstring>
        <name>eod</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the cluster estimated energy on detector (EOD)</para>
<para><simplesect kind="return"><para>eod </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="300" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="300" bodyend="303"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a71ccd5ee3fea70b4b1b27ba25f4b3fb8" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::height</definition>
        <argsstring>() const noexcept</argsstring>
        <name>height</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of rows the cluster spans</para>
<para><simplesect kind="return"><para>number of rows </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="252" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="252" bodyend="255"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a1797d804406d51ab2e22d5b9fae9cb53" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>dtype</type>
        <definition>dtype nc::imageProcessing::Cluster&lt; dtype &gt;::intensity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>intensity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the summed intensity of the cluster</para>
<para><simplesect kind="return"><para>summed cluster intensity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="276" column="19" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="276" bodyend="279"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1aa023fb6ea06515f18cd629b155f96a2c" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::imageProcessing::Cluster&lt; dtype &gt;::operator!=</definition>
        <argsstring>(const Cluster&lt; dtype &gt; &amp;rhs) const noexcept</argsstring>
        <name>operator!=</name>
        <param>
          <type>const <ref refid="classnc_1_1image_processing_1_1_cluster" kindref="compound">Cluster</ref>&lt; dtype &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>not equality operator</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="110" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="110" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a8308c5f0313872c9499de36d69d0ff19" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool nc::imageProcessing::Cluster&lt; dtype &gt;::operator==</definition>
        <argsstring>(const Cluster&lt; dtype &gt; &amp;rhs) const noexcept</argsstring>
        <name>operator==</name>
        <param>
          <type>const <ref refid="classnc_1_1image_processing_1_1_cluster" kindref="compound">Cluster</ref>&lt; dtype &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>equality operator</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>rhs</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>bool </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="90" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="90" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a386b222d5747fc2b77448ea5a56d24e4" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>const <ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref>&lt; dtype &gt; &amp;</type>
        <definition>const Pixel&lt;dtype&gt;&amp; nc::imageProcessing::Cluster&lt; dtype &gt;::operator[]</definition>
        <argsstring>(uint32 inIndex) const noexcept</argsstring>
        <name>operator[]</name>
        <param>
          <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
          <declname>inIndex</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>access operator, no bounds checking</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inIndex</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="classnc_1_1image_processing_1_1_pixel" kindref="compound">Pixel</ref> </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="125" column="25" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="125" bodyend="128"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1aab51c1c4539c3824bcdbd20a5db1fd4a" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type>dtype</type>
        <definition>dtype nc::imageProcessing::Cluster&lt; dtype &gt;::peakPixelIntensity</definition>
        <argsstring>() const noexcept</argsstring>
        <name>peakPixelIntensity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the intensity of the peak pixel in the cluster</para>
<para><simplesect kind="return"><para>peak pixel intensity </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="288" column="19" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1afdb1943f70f28747a1e83b74de984972" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void nc::imageProcessing::Cluster&lt; dtype &gt;::print</definition>
        <argsstring>() const</argsstring>
        <name>print</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Method Description: prints the <ref refid="classnc_1_1image_processing_1_1_cluster" kindref="compound">Cluster</ref> object to the console </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="352" column="18" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="352" bodyend="355"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1a58eea870dca4a5c61cfd4db24ea50267" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::rowMax</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rowMax</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the maximum row number of the cluster</para>
<para><simplesect kind="return"><para>maximum row number of the cluster </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="216" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1ac3f0c485f193a71a6caca9f553970383" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::rowMin</definition>
        <argsstring>() const noexcept</argsstring>
        <name>rowMin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the minimum row number of the cluster</para>
<para><simplesect kind="return"><para>minimum row number of the cluster </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="204" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="204" bodyend="207"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1ae89900f4557d6273fc49b330417e324e" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::size</definition>
        <argsstring>() const noexcept</argsstring>
        <name>size</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of pixels in the cluster</para>
<para><simplesect kind="return"><para>number of pixels in the cluster </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="180" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="180" bodyend="183"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1aaa1ee55d0c47196847b8bb1a76258bd3" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>std::string</type>
        <definition>std::string nc::imageProcessing::Cluster&lt; dtype &gt;::str</definition>
        <argsstring>() const</argsstring>
        <name>str</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a string representation of the cluster</para>
<para><simplesect kind="return"><para>string </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="335" column="25" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="335" bodyend="346"/>
      </memberdef>
      <memberdef kind="function" id="classnc_1_1image_processing_1_1_cluster_1accbfd3dbb32016c0f4234614347d74ce" prot="public" static="no" const="yes" explicit="no" inline="yes" noexcept="yes" virt="non-virtual">
        <type><ref refid="namespacenc_1af0f49663fb63332596e2e6327009d581" kindref="member">uint32</ref></type>
        <definition>uint32 nc::imageProcessing::Cluster&lt; dtype &gt;::width</definition>
        <argsstring>() const noexcept</argsstring>
        <name>width</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of columns the cluster spans</para>
<para><simplesect kind="return"><para>number of columns </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="264" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="264" bodyend="267"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classnc_1_1image_processing_1_1_cluster_1a1b1adec296082d83ee2f87484bfe07cb" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>friend std::ostream &amp;</type>
        <definition>std::ostream&amp; operator&lt;&lt;</definition>
        <argsstring>(std::ostream &amp;inStream, const Cluster&lt; dtype &gt; &amp;inCluster)</argsstring>
        <name>operator&lt;&lt;</name>
        <param>
          <type>std::ostream &amp;</type>
          <declname>inStream</declname>
        </param>
        <param>
          <type>const <ref refid="classnc_1_1image_processing_1_1_cluster" kindref="compound">Cluster</ref>&lt; dtype &gt; &amp;</type>
          <declname>inCluster</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>osstream operator</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>inStream</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>inCluster</parametername>
</parameternamelist>
<parameterdescription>
<para></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>std::ostream </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="366" column="20" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="366" bodyend="370"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Holds the information for a cluster of pixels. </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="1">
        <label>nc::imageProcessing::Cluster&lt; dtype &gt;</label>
        <link refid="classnc_1_1image_processing_1_1_cluster"/>
      </node>
    </collaborationgraph>
    <location file="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" line="55" column="1" bodyfile="C:/Github/NumCpp/include/NumCpp/ImageProcessing/Cluster.hpp" bodystart="54" bodyend="386"/>
    <listofallmembers>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a9cab13be79b63d9151e60a798ca39cb5" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>addPixel</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a5a8d82d40cea566786e8f80ad72a6d10" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>at</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a6e761b470453d5506015b9332b12e4a4" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>begin</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a9c84aca9710bec5c721fd6a9f94182c3" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>Cluster</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a73ce20625b5ca5d9e0d872cc8ad885dc" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>Cluster</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1abcc9f76b1d903546a3604ef87795d37e" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>clusterId</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1ac27217e60395adcc05fe920f3dced020" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>clusterId_</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a8c884e5e55d41c09165bca85446edb1f" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>colMax</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a1634359cd3f10391565151e78301973e" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>colMax_</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a27734d0fa45c7440e3018fa36c6633f9" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>colMin</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1ac4edaf69806fe90f204285a65cc46c0c" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>colMin_</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a3b344c255dfcfcf18e0fc9f1e84979ae" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>const_iterator</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1afc8b5d168cf1d611be9f5226ec7efd55" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>end</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a461863af036452bdb1813dfff33c7c42" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>eod</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a46f31e73fc6a7be03d6cf21aa601adc4" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>eod_</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a71ccd5ee3fea70b4b1b27ba25f4b3fb8" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>height</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a1797d804406d51ab2e22d5b9fae9cb53" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>intensity</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a735d3007148f230dca16fc9aa6ead3a9" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>intensity_</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1aa023fb6ea06515f18cd629b155f96a2c" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>operator!=</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a1b1adec296082d83ee2f87484bfe07cb" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>operator&lt;&lt;</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a8308c5f0313872c9499de36d69d0ff19" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>operator==</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a386b222d5747fc2b77448ea5a56d24e4" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>operator[]</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1aab51c1c4539c3824bcdbd20a5db1fd4a" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>peakPixelIntensity</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a91e17e6f7f328711d7a283b9b400c155" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>peakPixelIntensity_</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1ad6f3b6a6ef813f7f3ea1e6b3c3467c53" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>pixels_</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1afdb1943f70f28747a1e83b74de984972" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>print</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a58eea870dca4a5c61cfd4db24ea50267" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>rowMax</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1afbcacf780ff8945742acdac326ed35cb" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>rowMax_</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1ac3f0c485f193a71a6caca9f553970383" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>rowMin</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a1925205dd98b998c8aeedfc58dc6b8c5" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>rowMin_</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1ae89900f4557d6273fc49b330417e324e" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>size</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1a86ad5f6477f3f23b62d868c748014c42" prot="private" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>STATIC_ASSERT_ARITHMETIC</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1aaa1ee55d0c47196847b8bb1a76258bd3" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>str</name></member>
      <member refid="classnc_1_1image_processing_1_1_cluster_1accbfd3dbb32016c0f4234614347d74ce" prot="public" virt="non-virtual"><scope>nc::imageProcessing::Cluster</scope><name>width</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
